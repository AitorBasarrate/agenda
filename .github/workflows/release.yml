name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.25.1'
  NODE_VERSION: '20'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        go mod download
        npm ci --prefix ./frontend

    - name: Build frontend
      run: npm run build --prefix ./frontend

    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -ldflags="-s -w" -o task-calendar-manager-linux-amd64 cmd/api/main.go
        GOOS=linux GOARCH=arm64 CGO_ENABLED=1 go build -ldflags="-s -w" -o task-calendar-manager-linux-arm64 cmd/api/main.go
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -ldflags="-s -w" -o task-calendar-manager-darwin-amd64 cmd/api/main.go
        GOOS=darwin GOARCH=arm64 CGO_ENABLED=1 go build -ldflags="-s -w" -o task-calendar-manager-darwin-arm64 cmd/api/main.go
        GOOS=windows GOARCH=amd64 CGO_ENABLED=1 go build -ldflags="-s -w" -o task-calendar-manager-windows-amd64.exe cmd/api/main.go

    - name: Create release packages
      run: |
        # Create packages for each platform
        mkdir -p releases
        
        # Linux AMD64
        tar -czf releases/task-calendar-manager-linux-amd64.tar.gz task-calendar-manager-linux-amd64 frontend/dist
        
        # Linux ARM64
        tar -czf releases/task-calendar-manager-linux-arm64.tar.gz task-calendar-manager-linux-arm64 frontend/dist
        
        # macOS AMD64
        tar -czf releases/task-calendar-manager-darwin-amd64.tar.gz task-calendar-manager-darwin-amd64 frontend/dist
        
        # macOS ARM64
        tar -czf releases/task-calendar-manager-darwin-arm64.tar.gz task-calendar-manager-darwin-arm64 frontend/dist
        
        # Windows AMD64
        zip -r releases/task-calendar-manager-windows-amd64.zip task-calendar-manager-windows-amd64.exe frontend/dist

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          releases/task-calendar-manager-linux-amd64.tar.gz
          releases/task-calendar-manager-linux-arm64.tar.gz
          releases/task-calendar-manager-darwin-amd64.tar.gz
          releases/task-calendar-manager-darwin-arm64.tar.gz
          releases/task-calendar-manager-windows-amd64.zip
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/task-calendar-manager
        readme-filepath: ./README.md